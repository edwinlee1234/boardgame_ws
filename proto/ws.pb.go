// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ws.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 要定義你Request & Res的Struct
type WsTestRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WsTestRequest) Reset()         { *m = WsTestRequest{} }
func (m *WsTestRequest) String() string { return proto.CompactTextString(m) }
func (*WsTestRequest) ProtoMessage()    {}
func (*WsTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ws_7513fa59eb3b371c, []int{0}
}
func (m *WsTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WsTestRequest.Unmarshal(m, b)
}
func (m *WsTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WsTestRequest.Marshal(b, m, deterministic)
}
func (dst *WsTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WsTestRequest.Merge(dst, src)
}
func (m *WsTestRequest) XXX_Size() int {
	return xxx_messageInfo_WsTestRequest.Size(m)
}
func (m *WsTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WsTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WsTestRequest proto.InternalMessageInfo

type WsTestReply struct {
	State                string   `protobuf:"bytes,1,opt,name=State,json=state" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WsTestReply) Reset()         { *m = WsTestReply{} }
func (m *WsTestReply) String() string { return proto.CompactTextString(m) }
func (*WsTestReply) ProtoMessage()    {}
func (*WsTestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ws_7513fa59eb3b371c, []int{1}
}
func (m *WsTestReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WsTestReply.Unmarshal(m, b)
}
func (m *WsTestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WsTestReply.Marshal(b, m, deterministic)
}
func (dst *WsTestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WsTestReply.Merge(dst, src)
}
func (m *WsTestReply) XXX_Size() int {
	return xxx_messageInfo_WsTestReply.Size(m)
}
func (m *WsTestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WsTestReply.DiscardUnknown(m)
}

var xxx_messageInfo_WsTestReply proto.InternalMessageInfo

func (m *WsTestReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*WsTestRequest)(nil), "api.WsTestRequest")
	proto.RegisterType((*WsTestReply)(nil), "api.WsTestReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WsClient is the client API for Ws service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WsClient interface {
	// Request & Res都要寫，不可空
	Ping(ctx context.Context, in *WsTestRequest, opts ...grpc.CallOption) (*WsTestReply, error)
}

type wsClient struct {
	cc *grpc.ClientConn
}

func NewWsClient(cc *grpc.ClientConn) WsClient {
	return &wsClient{cc}
}

func (c *wsClient) Ping(ctx context.Context, in *WsTestRequest, opts ...grpc.CallOption) (*WsTestReply, error) {
	out := new(WsTestReply)
	err := c.cc.Invoke(ctx, "/api.Ws/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WsServer is the server API for Ws service.
type WsServer interface {
	// Request & Res都要寫，不可空
	Ping(context.Context, *WsTestRequest) (*WsTestReply, error)
}

func RegisterWsServer(s *grpc.Server, srv WsServer) {
	s.RegisterService(&_Ws_serviceDesc, srv)
}

func _Ws_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WsTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WsServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Ws/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WsServer).Ping(ctx, req.(*WsTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ws_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Ws",
	HandlerType: (*WsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Ws_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ws.proto",
}

func init() { proto.RegisterFile("ws.proto", fileDescriptor_ws_7513fa59eb3b371c) }

var fileDescriptor_ws_7513fa59eb3b371c = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x2f, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xe2, 0xe7, 0xe2, 0x0d, 0x2f, 0x0e,
	0x49, 0x2d, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x52, 0xe6, 0xe2, 0x86, 0x09,
	0x14, 0xe4, 0x54, 0x0a, 0x89, 0x70, 0xb1, 0x06, 0x97, 0x24, 0x96, 0xa4, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0xb1, 0x16, 0x83, 0x38, 0x46, 0x26, 0x5c, 0x4c, 0xe1, 0xc5, 0x42, 0x7a, 0x5c,
	0x2c, 0x01, 0x99, 0x79, 0xe9, 0x42, 0x42, 0x7a, 0x89, 0x05, 0x99, 0x7a, 0x28, 0xc6, 0x48, 0x09,
	0xa0, 0x88, 0x15, 0xe4, 0x54, 0x2a, 0x31, 0x38, 0xb1, 0x2d, 0x62, 0x62, 0xf6, 0xf0, 0x09, 0x4f,
	0x62, 0x03, 0xdb, 0x6f, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x12, 0x19, 0x3a, 0x9a, 0x8b, 0x00,
	0x00, 0x00,
}
